{"id":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","dependencies":[{"name":"/Users/seomaz/Documents/Work/chess/Html/package.json","includedInParent":true,"mtime":1613240339254},{"name":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/package.json","includedInParent":true,"mtime":1612985860247},{"name":"../Color","loc":{"line":4,"column":24},"parent":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Pieces/Pawn.js","resolved":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Color.js"},{"name":"../Moves/EnPassant","loc":{"line":5,"column":28},"parent":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Pieces/Pawn.js","resolved":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Moves/EnPassant.js"},{"name":"../Moves/Move","loc":{"line":6,"column":23},"parent":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Pieces/Pawn.js","resolved":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Moves/Move.js"},{"name":"../Moves/PawnFirstStep","loc":{"line":7,"column":32},"parent":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Pieces/Pawn.js","resolved":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Moves/PawnFirstStep.js"},{"name":"./Piece","loc":{"line":8,"column":24},"parent":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Pieces/Pawn.js","resolved":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Pieces/Piece.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pawn = void 0;\nconst Color_1 = require(\"../Color\");\nconst EnPassant_1 = require(\"../Moves/EnPassant\");\nconst Move_1 = require(\"../Moves/Move\");\nconst PawnFirstStep_1 = require(\"../Moves/PawnFirstStep\");\nconst Piece_1 = require(\"./Piece\");\nclass Pawn extends Piece_1.Piece {\n    constructor(color) {\n        super('p', color);\n        this.id = Math.round(Math.random() * 100);\n    }\n    getPossibleMoves(position, board, gameState) {\n        let result = [];\n        let deltaY = this.color === Color_1.Color.White ? 1 : -1;\n        // classic move\n        let cell = board.grid[position.x][position.y + deltaY];\n        if (!cell.piece) {\n            result.push(new Move_1.Move(board, position, cell, gameState));\n        }\n        //first step\n        if (this.nbMove === 0) {\n            const enPassant = cell;\n            cell = board.grid[position.x][position.y + deltaY * 2];\n            if (!cell.piece) {\n                result.push(new PawnFirstStep_1.PawnFirstStep(board, position, cell, enPassant, gameState));\n            }\n        }\n        // takes\n        if (position.x > 0) {\n            cell = board.grid[position.x - 1][position.y + deltaY];\n            if (cell.piece && cell.piece.color !== this.color) {\n                result.push(new Move_1.Move(board, position, cell, gameState));\n            }\n        }\n        if (position.x < 7) {\n            cell = board.grid[position.x + 1][position.y + deltaY];\n            if (cell.piece && cell.piece.color !== this.color) {\n                result.push(new Move_1.Move(board, position, cell, gameState));\n            }\n        }\n        // en passant\n        if (gameState.enPassant) {\n            if (Math.abs(position.x - gameState.enPassant.x) == 1 &&\n                Math.abs(position.y - gameState.enPassant.y) == 1) {\n                let trueTarget = board.grid[gameState.enPassant.x][position.y];\n                result.push(new EnPassant_1.EnPassant(board, position, gameState.enPassant, trueTarget, gameState));\n            }\n        }\n        return result;\n    }\n}\nexports.Pawn = Pawn;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/perso-chess/dist/com/Pieces/Pawn.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}}],"sources":{"node_modules/perso-chess/dist/com/Pieces/Pawn.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pawn = void 0;\nconst Color_1 = require(\"../Color\");\nconst EnPassant_1 = require(\"../Moves/EnPassant\");\nconst Move_1 = require(\"../Moves/Move\");\nconst PawnFirstStep_1 = require(\"../Moves/PawnFirstStep\");\nconst Piece_1 = require(\"./Piece\");\nclass Pawn extends Piece_1.Piece {\n    constructor(color) {\n        super('p', color);\n        this.id = Math.round(Math.random() * 100);\n    }\n    getPossibleMoves(position, board, gameState) {\n        let result = [];\n        let deltaY = this.color === Color_1.Color.White ? 1 : -1;\n        // classic move\n        let cell = board.grid[position.x][position.y + deltaY];\n        if (!cell.piece) {\n            result.push(new Move_1.Move(board, position, cell, gameState));\n        }\n        //first step\n        if (this.nbMove === 0) {\n            const enPassant = cell;\n            cell = board.grid[position.x][position.y + deltaY * 2];\n            if (!cell.piece) {\n                result.push(new PawnFirstStep_1.PawnFirstStep(board, position, cell, enPassant, gameState));\n            }\n        }\n        // takes\n        if (position.x > 0) {\n            cell = board.grid[position.x - 1][position.y + deltaY];\n            if (cell.piece && cell.piece.color !== this.color) {\n                result.push(new Move_1.Move(board, position, cell, gameState));\n            }\n        }\n        if (position.x < 7) {\n            cell = board.grid[position.x + 1][position.y + deltaY];\n            if (cell.piece && cell.piece.color !== this.color) {\n                result.push(new Move_1.Move(board, position, cell, gameState));\n            }\n        }\n        // en passant\n        if (gameState.enPassant) {\n            if (Math.abs(position.x - gameState.enPassant.x) == 1 &&\n                Math.abs(position.y - gameState.enPassant.y) == 1) {\n                let trueTarget = board.grid[gameState.enPassant.x][position.y];\n                result.push(new EnPassant_1.EnPassant(board, position, gameState.enPassant, trueTarget, gameState));\n            }\n        }\n        return result;\n    }\n}\nexports.Pawn = Pawn;\n"},"lineCount":55}},"error":null,"hash":"9b983d03793c980d9fc1a05490a9cc73","cacheData":{"env":{}}}