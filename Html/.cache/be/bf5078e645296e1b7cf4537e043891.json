{"id":"node_modules/perso-chess/dist/com/Game.js","dependencies":[{"name":"/Users/seomaz/Documents/Work/chess/Html/package.json","includedInParent":true,"mtime":1613240339254},{"name":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/package.json","includedInParent":true,"mtime":1612985860247},{"name":"./Board","loc":{"line":4,"column":24},"parent":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Game.js","resolved":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Board.js"},{"name":"./Color","loc":{"line":5,"column":24},"parent":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Game.js","resolved":"/Users/seomaz/Documents/Work/chess/Html/node_modules/perso-chess/dist/com/Color.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Game = exports.defaultGameState = void 0;\nconst Board_1 = require(\"./Board\");\nconst Color_1 = require(\"./Color\");\nexports.defaultGameState = {\n    traitTo: Color_1.Color.White,\n    count: 1,\n    halfmoveClock: 0,\n    canCastle: 'KQkg'\n};\nclass Game {\n    constructor() {\n        this.allMoves = [];\n        this.board = new Board_1.Board();\n        this.state = Object.assign({}, exports.defaultGameState);\n    }\n    computeLegalMoves(position) {\n        const res = [];\n        // 0: is there a piece ?\n        if (position === null || position === void 0 ? void 0 : position.piece) {\n            // 1: get all possible move from the piece\n            const allmoves = position.piece.getPossibleMoves(position, this.board, this.state);\n            // 2: remove illegal moves\n            res.push(...allmoves.filter(move => {\n                return move.isLegal();\n            }));\n        }\n        return res;\n    }\n    makeMove(move) {\n        var _a;\n        if (((_a = move.from.piece) === null || _a === void 0 ? void 0 : _a.color) !== this.state.traitTo) {\n            return \"waiting for other player\";\n        }\n        this.state = move.make();\n        this.state.isCheckMate = this.board.isCheckMate(this.state);\n        this.allMoves.push(move);\n        return move.getAlgebricName();\n    }\n    algebricMove(target) {\n        var _a;\n        const matches = /([^x]{0,3})x?(.{2})$/.exec(target);\n        if (matches) {\n            const origin = matches[1];\n            let pieceName = origin.length === 3 ? origin[0].toLowerCase() : null;\n            const fromName = origin.length === 3 ? origin.slice(1) : origin;\n            let toName = matches[2].toLowerCase();\n            // console.log({origin, pieceName, fromName, toName});\n            const from = this.board.getCellByAlgebricName(fromName);\n            let to = this.board.getCellByAlgebricName(toName);\n            //console.log({from, to});\n            if (from === null || from === void 0 ? void 0 : from.piece) {\n                if (pieceName && from.piece.name !== pieceName) {\n                    return 'incorrect long notation, bad piece';\n                }\n                const legalMoves = this.computeLegalMoves(from);\n                for (const move of legalMoves) {\n                    if (move.to === to) {\n                        return this.makeMove(move);\n                    }\n                }\n            }\n            else {\n                console.log('no correct origin detected, tying short algebraic notation...');\n            }\n            let candidateMove = null;\n            pieceName = origin.length === 1 ? origin.toLowerCase() : 'p';\n            toName = origin.length === 3 ? origin.slice(1) : origin;\n            // console.log({from, to, pieceName});\n            if (to) {\n                for (const cell of this.board.allCells) {\n                    if (((_a = cell.piece) === null || _a === void 0 ? void 0 : _a.name) === pieceName && cell.piece.color === this.state.traitTo) {\n                        const legalMoves = this.computeLegalMoves(cell);\n                        for (const move of legalMoves) {\n                            if (move.to === to) {\n                                if (candidateMove) {\n                                    return 'ambiguous move';\n                                }\n                                candidateMove = move;\n                            }\n                        }\n                    }\n                }\n                if (candidateMove) {\n                    return this.makeMove(candidateMove);\n                }\n            }\n        }\n        return 'no target';\n    }\n    toFEN() {\n        const traitTo = this.state.traitTo.charAt(0).toLowerCase();\n        const enPassant = this.state.enPassant ? Board_1.Board.getAlbebricName(this.state.enPassant) : '-';\n        const board = this.board.getFENSting();\n        return `${board} ${traitTo} ${this.state.canCastle} ${enPassant} ${this.state.halfmoveClock} ${this.state.count}`;\n    }\n    loadFEN(fen) {\n        const regex = /(.+) (.) (.{1,4}) (.{1,2}) (\\d) (\\d)/;\n        const [_, board, trait, castle, enPassant, half, count] = regex.exec(fen) || [];\n        if (!board || !trait || !castle || !enPassant || !half || !count ||\n            isNaN(parseInt(half)) || isNaN(parseInt(count))) {\n            return false;\n        }\n        this.state = Object.assign({}, exports.defaultGameState);\n        this.board = new Board_1.Board(board);\n        this.state.traitTo = trait === 'w' ? Color_1.Color.White : Color_1.Color.Black;\n        this.state.canCastle = castle;\n        this.state.enPassant = this.board.getCellByAlgebricName(enPassant);\n        this.state.halfmoveClock = parseInt(half);\n        this.state.count = parseInt(count);\n        this.state.isInCheck = this.board.whosIsCheck(this.state);\n        return true;\n    }\n    undoLastMove() {\n        const move = this.allMoves.pop();\n        if (move) {\n            this.state = move === null || move === void 0 ? void 0 : move.undo();\n            return true;\n        }\n        return false;\n    }\n}\nexports.Game = Game;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/perso-chess/dist/com/Game.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}}],"sources":{"node_modules/perso-chess/dist/com/Game.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Game = exports.defaultGameState = void 0;\nconst Board_1 = require(\"./Board\");\nconst Color_1 = require(\"./Color\");\nexports.defaultGameState = {\n    traitTo: Color_1.Color.White,\n    count: 1,\n    halfmoveClock: 0,\n    canCastle: 'KQkg'\n};\nclass Game {\n    constructor() {\n        this.allMoves = [];\n        this.board = new Board_1.Board();\n        this.state = Object.assign({}, exports.defaultGameState);\n    }\n    computeLegalMoves(position) {\n        const res = [];\n        // 0: is there a piece ?\n        if (position === null || position === void 0 ? void 0 : position.piece) {\n            // 1: get all possible move from the piece\n            const allmoves = position.piece.getPossibleMoves(position, this.board, this.state);\n            // 2: remove illegal moves\n            res.push(...allmoves.filter(move => {\n                return move.isLegal();\n            }));\n        }\n        return res;\n    }\n    makeMove(move) {\n        var _a;\n        if (((_a = move.from.piece) === null || _a === void 0 ? void 0 : _a.color) !== this.state.traitTo) {\n            return \"waiting for other player\";\n        }\n        this.state = move.make();\n        this.state.isCheckMate = this.board.isCheckMate(this.state);\n        this.allMoves.push(move);\n        return move.getAlgebricName();\n    }\n    algebricMove(target) {\n        var _a;\n        const matches = /([^x]{0,3})x?(.{2})$/.exec(target);\n        if (matches) {\n            const origin = matches[1];\n            let pieceName = origin.length === 3 ? origin[0].toLowerCase() : null;\n            const fromName = origin.length === 3 ? origin.slice(1) : origin;\n            let toName = matches[2].toLowerCase();\n            // console.log({origin, pieceName, fromName, toName});\n            const from = this.board.getCellByAlgebricName(fromName);\n            let to = this.board.getCellByAlgebricName(toName);\n            //console.log({from, to});\n            if (from === null || from === void 0 ? void 0 : from.piece) {\n                if (pieceName && from.piece.name !== pieceName) {\n                    return 'incorrect long notation, bad piece';\n                }\n                const legalMoves = this.computeLegalMoves(from);\n                for (const move of legalMoves) {\n                    if (move.to === to) {\n                        return this.makeMove(move);\n                    }\n                }\n            }\n            else {\n                console.log('no correct origin detected, tying short algebraic notation...');\n            }\n            let candidateMove = null;\n            pieceName = origin.length === 1 ? origin.toLowerCase() : 'p';\n            toName = origin.length === 3 ? origin.slice(1) : origin;\n            // console.log({from, to, pieceName});\n            if (to) {\n                for (const cell of this.board.allCells) {\n                    if (((_a = cell.piece) === null || _a === void 0 ? void 0 : _a.name) === pieceName && cell.piece.color === this.state.traitTo) {\n                        const legalMoves = this.computeLegalMoves(cell);\n                        for (const move of legalMoves) {\n                            if (move.to === to) {\n                                if (candidateMove) {\n                                    return 'ambiguous move';\n                                }\n                                candidateMove = move;\n                            }\n                        }\n                    }\n                }\n                if (candidateMove) {\n                    return this.makeMove(candidateMove);\n                }\n            }\n        }\n        return 'no target';\n    }\n    toFEN() {\n        const traitTo = this.state.traitTo.charAt(0).toLowerCase();\n        const enPassant = this.state.enPassant ? Board_1.Board.getAlbebricName(this.state.enPassant) : '-';\n        const board = this.board.getFENSting();\n        return `${board} ${traitTo} ${this.state.canCastle} ${enPassant} ${this.state.halfmoveClock} ${this.state.count}`;\n    }\n    loadFEN(fen) {\n        const regex = /(.+) (.) (.{1,4}) (.{1,2}) (\\d) (\\d)/;\n        const [_, board, trait, castle, enPassant, half, count] = regex.exec(fen) || [];\n        if (!board || !trait || !castle || !enPassant || !half || !count ||\n            isNaN(parseInt(half)) || isNaN(parseInt(count))) {\n            return false;\n        }\n        this.state = Object.assign({}, exports.defaultGameState);\n        this.board = new Board_1.Board(board);\n        this.state.traitTo = trait === 'w' ? Color_1.Color.White : Color_1.Color.Black;\n        this.state.canCastle = castle;\n        this.state.enPassant = this.board.getCellByAlgebricName(enPassant);\n        this.state.halfmoveClock = parseInt(half);\n        this.state.count = parseInt(count);\n        this.state.isInCheck = this.board.whosIsCheck(this.state);\n        return true;\n    }\n    undoLastMove() {\n        const move = this.allMoves.pop();\n        if (move) {\n            this.state = move === null || move === void 0 ? void 0 : move.undo();\n            return true;\n        }\n        return false;\n    }\n}\nexports.Game = Game;\n"},"lineCount":125}},"error":null,"hash":"6724b158d6de4e2bc414863faec2138e","cacheData":{"env":{}}}